// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  ssl      = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model City {
  id        Int    @id @default(autoincrement())
  extention Int
  name      String
  sequence  Int
  road      Roads  @relation(fields: [id], references: [id])

  @@map("city")
}

model Company {
  id   Int    @id @default(autoincrement())
  name String

  createdAt DateTime       @default(now()) @map("created_at")
  updatedAt DateTime       @updatedAt @map("updated_at")
  deletedAt DateTime?      @map("deleted_at")
  users     UserXCompany[]
  videos    Videos[]

  @@map("company")
}

model Iggs {
  id       Int      @id @default(autoincrement())
  date     DateTime
  level    Level
  regional String
  videoId  Int      @map("video_id")
  roadId   Int      @map("road_id")

  deletedAt DateTime? @map("deleted_at")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  road  Roads   @relation(fields: [roadId], references: [id])
  video Videos? @relation(fields: [videoId], references: [id])

  reports    Reports[]
  patologies Patology[]

  @@map("iggs")
}

model Patology {
  id            Int    @id @default(autoincrement())
  acronym       String
  code          String
  descrption    String
  iggsId        Int?
  km            Int
  level         Level
  type          String
  screenshotUrl String @map("screenshot_url")
  videoId       Int    @map("video_id")
  videoTime     String @map("video_time")
  cracks        String @db.Text
  roadSide      String @map("road_side") @db.Text

  road  Roads  @relation(fields: [id], references: [id])
  video Videos @relation(fields: [videoId], references: [id])
  iggs  Iggs?  @relation(fields: [iggsId], references: [id])

  @@map("patology")
}

model Reports {
  id      Int    @id @default(autoincrement())
  userId  Int    @map("user_id")
  level   Level
  videoId Int    @map("video_id")
  iggId   Int    @map("igg_id")
  user    Users  @relation(fields: [userId], references: [id])
  igg     Iggs   @relation(fields: [id], references: [id])
  video   Videos @relation(fields: [videoId], references: [id])

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("reports")
}

model Roads {
  id           Int    @id @default(autoincrement())
  extention    Int
  mesh         String
  regional     String
  acronym      String @unique
  url          String
  points       String @db.Text
  kml          String @db.Text
  revesment    String @db.Text
  stretch      String @db.Text
  otherDefects String @map("other_defects") @db.Text

  cities     City[]
  iggs       Iggs[]
  patologies Patology[]
  videos     Videos[]

  @@map("roads")
}

model Users {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String
  cpf           String?  @unique
  position      Position @default(ENGENEER)
  phone         String?  @unique
  enrollment    String?  @unique
  corporationId Int?     @map("corporation_id")
  token         String?  @db.VarChar(500)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  reports   Reports[]
  companies UserXCompany[]

  @@map("users")
}

model UserXCompany {
  id        Int @id @default(autoincrement())
  userId    Int @map("user_id")
  companyId Int @map("company_id")

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  user    Users   @relation(fields: [userId], references: [id])
  company Company @relation(fields: [companyId], references: [id])

  @@map("user_x_company")
}

model Videos {
  id        Int      @id @default(autoincrement())
  url       String
  date      DateTime
  extension String
  kmInitial Int      @map("km_initial")
  kmFinal   Int      @map("km_final")
  core      String
  roadId    Int      @map("road_id")
  processed Boolean  @default(false)
  companyId Int      @map("company_id")

  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime? @map("deleted_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  company Company @relation(fields: [companyId], references: [id])
  road    Roads   @relation(fields: [roadId], references: [id])

  iggs       Iggs[]
  patologies Patology[]
  reports    Reports[]

  @@map("videos")
}

// Enums

enum Level {
  MAIN
  SUB
}

enum Position {
  ADMIN
  ENGENEER
  ARCHITECT
  INTERN
  OTHER
}

enum StatesAbbreviation {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}